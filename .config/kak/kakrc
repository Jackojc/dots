colorscheme yuloo

# Plugins
source "%val{config}/rc/inc-dec.kak"
source "%val{config}/rc/idsession.kak"
source "%val{config}/rc/byline.kak"
source "%val{config}/rc/tabs.kak"
source "%val{config}/rc/select-view.kak"
source "%val{config}/rc/move-line.kak"
source "%val{config}/rc/edit.kak"
source "%val{config}/rc/out-of-view.kak"
source "%val{config}/rc/smooth-scroll.kak"
source "%val{config}/rc/fzf.kak"
source "%val{config}/rc/fzf-file.kak"

require-module "byline"
require-module "move-line"
require-module "edit"
require-module "out-of-view"
require-module "fzf"

out-of-view-enable

# Options
set-option global tabstop 4
set-option global indentwidth 0
set-option global scrolloff 3,3
set-option global incsearch false
set-option global aligntab false
set-option global startup_info_version 99999999999
set-option global autoreload yes
set-option global ui_options ncurses_set_title=true ncurses_assistant=none ncurses_enable_mouse=false
set-option global modelinefmt_tabs '%opt{out_of_view_status_line}{{context_info}} {{mode_info}} %val{cursor_line}:%val{cursor_char_column}'
set-option global scroll_options speed=0 interval=5 max_duration=250
set-option global fzf_file_command 'rg'
set-option global fzf_highlight_command 'bat'
set-option global fzf_preview_tmux_height '10'

# Highlighters
add-highlighter global/ show-whitespaces
add-highlighter global/ show-matching
add-highlighter global/ number-lines -relative -hlcursor -min-digits 2
add-highlighter global/ dynregex '%reg{/}' 0:+u  # highlight search matches

# Default terminal emulator
declare-option str termcmd %sh{ printf %s\\n "st -e sh -c" }

# Show tab mode
map global normal b ': enter-user-mode tabs<ret>' -docstring 'tabs'
map global normal B ': enter-user-mode -lock tabs<ret>' -docstring 'tabs (lock)'

# Select view
map global normal <a-%> ': select-view<ret>' -docstring 'select view'
map global view s '<esc>: select-view<ret>' -docstring 'select view'

# Move lines
map global normal <c-down> ': move-line-below<ret>'
map global normal <c-up> ': move-line-above<ret>'

# Home/End
map global normal <end>  'gl'
map global normal <home> 'gh'

map global normal <s-end>  'Gl'
map global normal <s-home> 'Gh'

# Do not yank when using d/c
map global normal d <a-d>
map global normal c <a-c>

# Remap b to q
map global normal = q
map global normal <a-=> Q

# Select left/right word
map global normal q b
map global normal Q B
map global normal <a-q> <a-b>
map global normal <a-Q> <a-B>

# Backspace, delete and enter work in normal mode
map global normal <backspace> 'h<a-d>'
map global normal <ret> 'i<ret><esc>'
map global normal <del> '<a-d>'

# Comments
map global normal '#' ': comment-line<ret>'
map global normal '<a-#>' ': comment-block<ret>'

# Incr/decr
map global normal <c-a> ': inc-dec-modify-numbers + %val{count}<ret>'
map global normal <c-x> ': inc-dec-modify-numbers - %val{count}<ret>'

# Tab to cycle buffers
map global normal <tab> ': buffer-next<ret>'
map global normal <s-tab> ': buffer-previous<ret>'

# Buffer navigation
map global tabs a "ga" -docstring "↔ alt"
# map global tabs f ": find-edit " -docstring "find & edit"
map global tabs f ": fzf-file<ret>" -docstring "find & edit"
map global tabs l ": tab-nav next<ret>" -docstring "→ next"
map global tabs h ": tab-nav prev<ret>" -docstring "← prev"

map global tabs L ": tab-move next<ret>" -docstring "→ drag right"
map global tabs H ": tab-move prev<ret>" -docstring "← drag left"

map global tabs d ": delete-buffer<ret>" -docstring "delete (current)"
map global tabs D ": delete-saved-buffers<ret>" -docstring "delete (saved)"
map global tabs o ": delete-all-saved-except-current<ret>" -docstring "only (saved)"

# Readline mappings
map -docstring "move the cursor to the start of the line"        global insert <c-a> '<a-;>gh'
map -docstring "move the cursor to the end of the line"          global insert <c-e> '<esc>glli'
map -docstring "delete the character under the anchor"           global insert <c-d> '<a-;>c'
map -docstring "delete from the cursor to the start of the line" global insert <c-u> '<esc>h<a-h>c'
map -docstring "delete from the cursor to the end of the line"   global insert <c-k> '<esc><a-l>c'
map -docstring "delete until the next word boundary"             global insert <a-d> '<esc>ec'
map -docstring "delete until the previous word boundary"         global insert <c-w> '<esc>bc'
map -docstring "paste before the cursor"                         global insert <c-y> '<esc>Pi'

# Remove trailing whitespaces on file save
hook global BufWritePre .* %{ try %{
	execute-keys -draft '%s[\h\v]+$<ret><a-d>'
} }

# Highlight the currently focused line and columns 80 & 120.
hook global WinCreate .* %{ update_line_highlighter }
hook global -group crosshairs RawKey .* %{ update_line_highlighter }

# Enable smooth scroll
hook global WinCreate [^*].* %{ hook -once window WinDisplay .* smooth-scroll-enable }

# Add some highlighters for Rust and C++
hook global WinSetOption filetype=(c|cpp|rust) %{
	add-highlighter buffer/namespace regex [a-zA-Z](\w+)?(\h+)?(::) 0:namespace
	add-highlighter buffer/functions regex \w+(\h+)?(?=\() 0:function
}

# Rename session to something more human readable
hook global KakBegin .* %{ idsession }

# Delete text in scratch buffer
hook global BufCreate '^\*scratch\*$' %{ exec '%d' }

# Tab to cycle autocomplete matches
hook global InsertCompletionShow .* %{ try %{
	execute-keys -draft 'h<a-K>\h<ret>'
	map window insert <tab> <c-n>
	map window insert <s-tab> <c-p>
}}

hook global InsertCompletionHide .* %{
	unmap window insert <tab> <c-n>
	unmap window insert <s-tab> <c-p>
}

# Copy/paste
hook global RegisterModified '"' %{ nop %sh{
	if [ -n "$DISPLAY" ]; then
		printf %s "$kak_main_reg_dquote" | xclip -in -selection clipboard >&- 2>&-

	elif [ -n "$TMUX" ]; then
		printf %s "$kak_main_reg_dquote" | tmux loadb -
	fi
}}

define-command -hidden paste-before %{
	execute-keys ! %sh{
		if [ -n "$DISPLAY" ]; then
			printf 'xclip -o -selection clipboard'

		elif [ -n "$TMUX" ]; then
			printf 'tmux saveb -'
		fi
	} <ret>
}

define-command -hidden paste-after %{
	execute-keys <a-!> %sh{
		if [ -n "$DISPLAY" ]; then
			printf 'xclip -o -selection clipboard'

		elif [ -n "$TMUX" ]; then
			printf 'tmux saveb -'
		fi
	} <ret>
}

# Paste
map global normal P ': paste-after<ret>'
map global normal p ': paste-before<ret>'

# Update focused line and columns
define-command update_line_highlighter %{
	# highlight focused line
	try %{ remove-highlighter window/highlight_focused_line }
	try %{ add-highlighter window/highlight_focused_line line %val{cursor_line} FocusedLine }

	# highlight column 80
	try %{ remove-highlighter window/highlight_column_80 }
	try %{ add-highlighter window/highlight_column_80 column 80 FocusedLine }

	# highlight column 120
	try %{ remove-highlighter window/highlight_column_120 }
	try %{ add-highlighter window/highlight_column_120 column 120 FocusedLine }
}

# New opens in the same buffer
map -docstring 'New client' global normal <c-t> ': new buffer %val{bufname}<ret>'

# Tmux
define-command -docstring "vsplit [<commands>]: split tmux vertically" vsplit -params .. -command-completion %{
	tmux-terminal-horizontal kak -c %val{session} -e "%arg{@}"
}

define-command -docstring "split [<commands>]: split tmux horizontally" split -params .. -command-completion %{
	tmux-terminal-vertical kak -c %val{session} -e "%arg{@}"
}

define-command -docstring "tabnew [<commands>]: create new tmux window" tabnew -params .. -command-completion %{
	tmux-terminal-window kak -c %val{session} -e "%arg{@}"
}

# Set filetype of buffer
define-command -params 1 filetype %{
	eval "set-option buffer filetype %arg{1}"
}

# Don't overwrite existing files on save
define-command -params 0..1 secure_write %{ evaluate-commands %sh{
	if [ -z ${1+x} ]; then
		# no param given: usual write
		echo "write"

	else
		bufname=$1
		if [ -e "${bufname}" ] && [ "${bufname}" != "${current_bufname}" ]; then
			# file already exists and is not the current one
			echo "echo 'file exists, use w!'"
		else
			echo "write ${bufname}"
		fi
	fi
}}

# Don't overwrite existing files
unalias global w write
alias global w secure_write

# Change colours on focus change
hook global FocusIn .* %{
	set-face window FocusedLine        FocusedLine
	set-face window Default            Default
	set-face window BufferPadding      BufferPadding
	set-face window PrimarySelection   PrimarySelection
	set-face window SecondarySelection SecondarySelection
	set-face window PrimaryCursor      PrimaryCursor
	set-face window SecondaryCursor    SecondaryCursor
	set-face window PrimaryCursorEol   PrimaryCursorEol
	set-face window SecondaryCursorEol SecondaryCursorEol
	set-face window MenuForeground     MenuForeground
	set-face window MenuBackground     MenuBackground
	set-face window MenuInfo           MenuInfo
	set-face window StatusLine         StatusLine
	set-face window StatusLineMode     StatusLineMode
	set-face window StatusLineInfo     StatusLineInfo
	set-face window StatusLineValue    StatusLineValue
	set-face window StatusCursor       StatusCursor
	set-face window Information        Information
	set-face window Error              Error
	set-face window Prompt             Prompt
}

hook global FocusOut .* %{
	set-face window FocusedLine        InactiveFocusedLine
	set-face window Default            InactiveDefault
	set-face window BufferPadding      InactiveBufferPadding
	set-face window PrimarySelection   InactivePrimarySelection
	set-face window SecondarySelection InactiveSecondarySelection
	set-face window PrimaryCursor      InactivePrimaryCursor
	set-face window SecondaryCursor    InactiveSecondaryCursor
	set-face window PrimaryCursorEol   InactivePrimaryCursorEol
	set-face window SecondaryCursorEol InactiveSecondaryCursorEol
	set-face window MenuForeground     InactiveMenuForeground
	set-face window MenuBackground     InactiveMenuBackground
	set-face window MenuInfo           InactiveMenuInfo
	set-face window StatusLine         InactiveStatusLine
	set-face window StatusLineMode     InactiveStatusLineMode
	set-face window StatusLineInfo     InactiveStatusLineInfo
	set-face window StatusLineValue    InactiveStatusLineValue
	set-face window StatusCursor       InactiveStatusCursor
	set-face window Information        InactiveInformation
	set-face window Error              InactiveError
	set-face window Prompt             InactivePrompt
}
