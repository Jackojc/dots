#!/usr/bin/env sh


# Show statusbar while super is held
{@Super_L,Super_L}
	{bar_hide,bar_show}

{@Super_R,Super_R}
	{bar_hide,bar_show}


# scratchpad
{_,super + } {F1,F2}
	{scratch_visibility,scratch_toggle} {1,2}

super + BackSpace
	scratch_pop && bspc node --state tiled --layer normal --flag locked=off --flag sticky=off --flag private=off


# term
super + Return
	launch_st

super + shift + Return
	launch_st -e "tmux_attach"


# launch programs
super + l; {s,w,f,c,b,n}
	{ \
		sampler, \
		firefox, \
		launch_st -e nnn "$(focused_pwd)", \
		bspwm_float launch_st -e calc, \
		bspwm_float launch_st -e bluetoothctl, \
		bspwm_float launch_st -e iwctl, \
	}

# tools
super + t; {n,d,u,w,r}
	{ \
		prompt_notes, \
		prompt_dim, \
		prompt_usb, \
		prompt_wallpaper, \
		wallpaper_random \
	}


super + Tab
	dmenu_run

super + shift + Tab
	prompt_general

# screenshot
Print
	prompt_screenshot



# goto empty desktop
super + e
	bspc desktop -f next.\!occupied.local

# move node to empty desktop
super + shift + e
	bspc node --to-desktop next.\!occupied


# close/kill window
@super + x
	id="$(pfw)"; prompt_yesno close? && bspc node "$id" -c

@super + shift + x
	id="$(pfw)"; prompt_yesno kill? && bspc node "$id" -k


# rotate window tree (node placement stays the same)
super + r
	bspc node @/ -C forward

# rotate windows
super + shift + r
	bspc node @focused:/ -R 90

# move window into preselected area
super + shift + m
	bspc node -n last.!automatic


# focus or move nodes
super + {Up,Down,Left,Right}
	bspwm_node_focus {north,south,west,east}

super + shift + {Up,Down,Left,Right}
	bspwm_node_move {north,south,west,east}

alt + {_,shift} + Tab
	bspc node -f {next,prev}.local.!hidden.window


# resize nodes
super + s: {Left,Down,Up,Right}
	bspwm_node_resize {left,bottom,top,right} 5

super + s: r
	for n in `bspc query -N -d`; do bspc node $n --equalize; done; notify_node "equalised"; xdotool key Escape


# pre-select
super + {h,v}
	bspc node -p \~{east,south}


# change node flags
super + shift + space
	bspc node -t floating || bspc node -t tiled; $(bspc query -N -n && notify_node $(node_get))

super + f
	bspc node -t fullscreen || bspc node -t tiled; notify_node $(node_get)


# change desktop layout
super + space
	bspc desktop -l next; notify_workspace $(workspace_get)


# dock window in corner
super + d: {1,2,3,4}
	corner_push {0,1,2,3}

super + d; BackSpace
	corner_pop && notify_node "undocked"; xdotool key Escape


# focus or move node to last desktop
super + Escape
	bspc desktop -f last.local

super + shift + Escape
	bspc node --to-desktop last.local --follow


# focus desktops
super + {1-9}
	bspc desktop -f focused:^{1-9}

super + shift + {1-9}
	bspc node --to-desktop focused:^{1-9}.local

super + bracket{left,right}
	bspc desktop -f {prev,next}.local.occupied

super + shift + bracket{left,right}
	bspc node -d {prev,next}.local --follow





# BSPWM CONFIG
# gaps
super + c: {minus,equal}
	{gaps_decr,gaps_incr} 5 && notify_node $(( $(gaps_get) + 1 ))px

super + c; 0
	gaps_reset && notify_node "reset"; xdotool key Escape



# SPECIAL FUNCTION KEYS
XF86Sleep
	power_suspend

XF86AudioMute
	muted_toggle && notify_mute "$(muted_get)"

XF86AudioMicMute
	mic_toggle && notify_mic "$(mic_get)"

XF86Audio{LowerVolume,RaiseVolume}
	{volume_decr,volume_incr} 5 && notify_volume "$(volume_get)%"

shift + XF86Audio{LowerVolume,RaiseVolume}
	{volume_decr,volume_incr} 1 && notify_volume "$(volume_get)%"

XF86MonBrightness{Down,Up}
	{backlight_decr,backlight_incr} 5 && notify_backlight $(backlight_get)%

shift + XF86MonBrightness{Down,Up}
	{backlight_decr,backlight_incr} 1 && notify_backlight $(backlight_get)%

